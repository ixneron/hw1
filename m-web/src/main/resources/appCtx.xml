<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="reqs"/>

<!-- CONNECTION FACTORY -->
    <!--<bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">-->
        <!--<constructor-arg index="0" value="tcp://192.168.148.130:61616"/>-->
    <!--</bean>-->
<!--&lt;!&ndash; xa res1 &ndash;&gt;-->
    <!--<bean id="xaFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory">-->
        <!--<property name="brokerURL" value="tcp://192.168.148.130:61616"/>-->
        <!--<property name="redeliveryPolicy" ref="redeliveryPolicy"/>-->
    <!--</bean>-->

    <!--<bean id="atomikosConnectionFactory" class="com.atomikos.jms.AtomikosConnectionFactoryBean">-->
        <!--<property name="xaConnectionFactory" ref="xaFactory"/>-->
        <!--<property name="uniqueResourceName" value="amQueue"/>-->
    <!--</bean>-->
<!--&lt;!&ndash; xa res2 &ndash;&gt;-->
    <!--<bean id="xaFactory2" class="org.apache.activemq.ActiveMQXAConnectionFactory">-->
        <!--<property name="brokerURL" value="tcp://192.168.148.130:61616"/>-->
    <!--</bean>-->

    <!--<bean id="atomikosConnectionFactory2" class="com.atomikos.jms.AtomikosConnectionFactoryBean">-->
        <!--<property name="xaConnectionFactory" ref="xaFactory2"/>-->
        <!--<property name="uniqueResourceName" value="amQueue2"/>-->
    <!--</bean>-->
    <!--<bean id="ibmConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">-->
        <!--<property name="jndiName" value="jms/WasConnectionFactory"/>-->
        <!--<property name="lookupOnStartup" value="false"/>-->
        <!--<property name="cache" value="true"/>-->
        <!--<property name="proxyInterface" value="javax.jms.ConnectionFactory"/>-->
    <!--</bean>-->
    <jee:jndi-lookup id="ibmConnectionFactory"  jndi-name="jms/WasConnectionFactory"/>

<!-- redelivery policy -->
    <!--<bean id="redeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">-->
        <!--<property name="initialRedeliveryDelay" value="1000"/>-->
        <!--<property name="redeliveryDelay" value="1000"/>-->
        <!--<property name="maximumRedeliveries" value="0"/>-->
        <!--<property name="queue" value="ActiveMQ.DLQ"/>-->
    <!--</bean>-->

    <bean id="errorHandler" class="reqs.MyErrorHandler"/>

<!-- JMS TEMPLATE -->
    <bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate" scope="prototype">
        <property name="connectionFactory" ref="ibmConnectionFactory"/>
        <property name="receiveTimeout" value="1000"/>
        <property name="defaultDestination" ref="destinationQueue"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="jms2QueueTemplate" class="org.springframework.jms.core.JmsTemplate" scope="prototype">
        <property name="connectionFactory" ref="ibmConnectionFactory"/>
        <property name="receiveTimeout" value="1000"/>
        <property name="defaultDestination" ref="destination2Queue"/>
    </bean>

    <bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate" scope="prototype">
        <property name="connectionFactory" ref="ibmConnectionFactory"/>
        <property name="receiveTimeout" value="1000"/>
        <property name="pubSubDomain" value="true"/>
        <property name="defaultDestination" ref="destinationTopic"/>
    </bean>

<!-- DESTINATIONS -->
    <jee:jndi-lookup id="destinationQueue" jndi-name="jms/input" />
    <jee:jndi-lookup id="destination2Queue" jndi-name="jms/output" />
    <jee:jndi-lookup id="destinationQDLQ" jndi-name="jms/fail" />
    <jee:jndi-lookup id="destinationTopic" jndi-name="jms/topic" />


<!-- BEANS LISTENER -->
    <bean id="listenerViaQueue" class="reqs.MessageListenerViaQueue"/>
    <bean id="listenerViaTopicFirstClient" class="reqs.MessageListenerViaTopicFirstClient"/>
    <bean id="listenerViaTopicSecondClient" class="reqs.MessageListenerViaTopicSecondClient"/>
    <bean id="listenerViaTopicNonDur" class="reqs.MessageListenerViaTopicNonDur"/>
    <bean id="listenerViaDoubleQueue" class="reqs.MessageListenerViaDoubleQueue"/>
    <bean id="listenerViaQueueDLQ" class="reqs.MessageListenerViaQueueDLQ"/>

<!--&lt;!&ndash; DEFAULT MESSAGE LISTENER &ndash;&gt;-->
    <!--<bean id="queueListenerDLQ" class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
        <!--<property name="connectionFactory" ref="ibmConnectionFactory"/>-->
        <!--<property name="destination" ref="destinationQDLQ"/>-->
        <!--<property name="messageListener" ref="listenerViaQueueDLQ"/>-->
    <!--</bean>-->

<!-- queue listeners -->
    <!--<bean id="doubleQueueListner" class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
        <!--<property name="connectionFactory" ref="ibmConnectionFactory"/>-->
        <!--<property name="destination" ref="destination2Queue"/>-->
        <!--<property name="messageListener" ref="listenerViaDoubleQueue"/>-->
        <!--<property name="errorHandler" ref="errorHandler"/>-->

        <!--<property name="transactionManager" ref="transactionManager"/>-->
        <!--<property name="sessionTransacted" value="true"/>-->
    <!--</bean>-->

    <bean id="queueListener" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="ibmConnectionFactory"/>
        <property name="destination" ref="destinationQueue"/>
        <property name="messageListener" ref="listenerViaQueue"/>
        <property name="errorHandler" ref="errorHandler"/>

        <property name="transactionManager" ref="transactionManager"/>
        <property name="sessionTransacted" value="true"/>
    </bean>
<!--&lt;!&ndash; topic listeners &ndash;&gt;-->
    <!--<bean id="topicListenerNonDur" class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
        <!--<property name="connectionFactory" ref="ibmConnectionFactory"/>-->
        <!--<property name="destination" ref="destinationTopic"/>-->
        <!--<property name="pubSubDomain" value="true"/>-->
        <!--<property name="messageListener" ref="listenerViaTopicNonDur"/>-->
    <!--</bean>-->

    <bean id="topicListenerFirst" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="ibmConnectionFactory"/>

        <property name="destination" ref="destinationTopic"/>
        <property name="pubSubDomain" value="true"/>
        <property name="messageListener" ref="listenerViaTopicFirstClient"/>
        <property name="subscriptionDurable" value="true"/>
        <property name="durableSubscriptionName" value="1005002"/>
        <property name="clientId" value="1005011"/>
    </bean>

    <!--<bean id="topicListenerSecond" class="org.springframework.jms.listener.DefaultMessageListenerContainer">-->
        <!--<property name="connectionFactory" ref="ibmConnectionFactory"/>-->
        <!--<property name="destination" ref="destinationTopic"/>-->
        <!--<property name="pubSubDomain" value="true"/>-->
        <!--<property name="messageListener" ref="listenerViaTopicSecondClient"/>-->
        <!--<property name="subscriptionDurable" value="true"/>-->
        <!--<property name="durableSubscriptionName" value="1005001"/>-->
        <!--<property name="clientId" value="1005010"/>-->
    <!--</bean>-->

<!-- MARSHALLER  -->
    <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound" value="generated.Card"/>
        <property name="schema" value="/WEB-INF/classes/card.xsd"/>
    </bean>

<!-- MESSAGE SENDERS -->
    <bean class="reqs.MessageSenderViaQueue"/>
    <bean class="reqs.MessageSenderViaTopic"/>

<!-- atomikos sys. props -->
    <bean id="setMyAtomikosSystemProps"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <!-- System.getProperties() -->
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetClass" value="java.lang.System" />
                <property name="targetMethod" value="getProperties" />
            </bean>
        </property>
        <property name="targetMethod" value="putAll" />
        <property name="arguments">
            <!-- The new Properties -->
            <util:properties>
                <!--<prop key="com.atomikos.icatch.file">/etc/myapp/jta.properties</prop>-->
                <!--<prop key="com.atomikos.icatch.hide_init_file_path">true</prop>-->
                <prop key="com.atomikos.icatch.registered">true</prop>
            </util:properties>
        </property>
    </bean>

<!-- настройка транзакций -->
    <bean id="jtaTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
    init-method="init" destroy-method="close">
        <property name="forceShutdown" value="false"/>
    </bean>

    <bean id="jtaUserTransactionManager" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="jtaTransactionManager"/>
        <property name="userTransaction" ref="jtaUserTransactionManager"/>
    </bean>


    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>